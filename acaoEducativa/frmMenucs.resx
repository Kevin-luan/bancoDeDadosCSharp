<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNovoItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B0lSKGDLBF3nAAAAAElFTkSuQmCC
</value>
  </data>
</root>